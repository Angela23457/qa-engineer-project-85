---
- summary: |
    Успешная регистрация пользователя по e-mail
  requirement: |
    Возможность зарегистрироваться на Codebattle через e-mail
  prerequisites: |
    Окрыта страница регистрации
  test-data: |
    Nickname, email не использовались ранее для регистрации на данном сайте Password = Parol-ex-hexlet1
  steps:
    - Вводим Nickname ранее не зарегистрированный на данном сайте
    - Вводим Email ранее не зарегистрированный на данном сайте
    - Вводим пароль
    - Вводим подтверждение пароля
    - Нажимаем кнопку «Submit»
  expected-result: |
    Регистрация нового пользователя успешно выполнена, открывается основная страница сайта

- summary: |
    Невозможность регистрации с неправильным адресом электронной почты
  requirement: |
    При неверно написанном электронном адресе будет сообщение об ошибке
  prerequisites:
    Открыта страница логина
  test-data: |
    Nickname = Angela Email = test12-hexletyandexcom Password = Parol-ex-hexlet1
  steps:
    - Вводим Nickname
    - Вводим Email
    - Вводим пароль
    - Вводим подтверждение пароля
    - Нажимаем кнопку «Submit»
  expected-result: |
    Пользователь должен получить сообщение об ошибке что Email неверный 
    
- summary: |
    Невозможна повторная регистрация существующего пользователя Codebattle
  requirement: |
    При повторной регистрации пользователь должен получить сообщение об ошибке, что Nickname уже занят
  prerequisites:
    Открыта страница регистрации
  test-data: |
    Nickname = Angela Email = test12-hexlet@yandex.ru Password = Parol-ex-hexlet1
  steps:
    -  Вводим Nickname
    -  Вводим Email
    -  Вводим пароль
    -  Нажимаем кнопку «Submit»
  expected-result: |
    Пользователь должен получить сообщение об ошибке, что данный  Nickname уже занят

- summary: |
    Успешная авторизация пользователя через Github
  requirement: |
    При верном вводе логина и пароля происходит успешная авторизация на Codebattle
  prerequisites: |
    Окрыта страница регистрации
  test-data: |
    Username = Анжела23457 Password = Popihe123
  steps:
    - Нажимаем кнопку «Войдите с помощью Github»
    - Вводим пароль
    - Вводим логин
    - Нажимаем кнопку «Войти
  expected-result: |
    Пользователь авторизован и должен попасть на главную страницу

- summary: |
    Проверка запуска игры неавторизованным пользователем
  requirement: |
    Неавторизованный пользователь может пройти демо-версию батла с ботом
  prerequisites:
    Открыта страница логина. Пользователь не авторизован
  test-data: |
    no date 
  steps:
    - Нажимаем кнопку «Try simple battle»
  expected-result: |
   Начинается батл с ботом

- summary: |
    Проверка выбора уровня сложности батла
  requirement: |
    Перед началом батла игрок может выбрать уровень сложности
  prerequisites:
    Открыта главная страница, пользователь авторизован
  test-data: |
    no date 
  steps:
    - Нажать на кнопку "Create a game"
    - В модальном окне выбрать сложность баттла
    - Нажать "Create battle"
  expected-result: |
    Начинается батл с выбранным уровнем сложности 

- summary: |
    Проверка успешной авторизации через Discord 
  requirement: |
    При верном вводе логина и пароля происходит успешная авторизация на Codebattle через Discord 
  prerequisites:
    Открыта страница регистрации
  test-data: |
    Логин = pampyshka1 Пароль = 12345qwer4545
  steps:
    - Нажиаем кнопку "Войти через Discord"
    - Вводим емайл/номер телефона
    - Вводим пароль
    - Нажимаем кнопку "Вход"
  expected-result: |
    Пользователь авторизован и открывается  главная страница сайта

- summary: |
    Проверка,того что пользователь может выбрать язык программирования для выполнения задания
  requirement: |
    Когда начинается игра над окном решения есть список языков на выбор
  prerequisites:
    Открыта страница игры "rect_area"
  test-data: |
    12 языков программирования на выбор
  steps:
    - Выбираем язык из списка
    - Нажимаем на него
  expected-result: |
    У пользователя устанавливается выбранный язык и можно начинать писать код

- summary: |
    Возможность проверки своего кода
  requirement: |
    Пользователь может проверить правильность своего кода 
  prerequisites:
    Пользователь авторизован
    Открыта страница игры "rect_area"
    Игра начата 
  test-data: |
    no date 
  steps:
    - Вводим код #const _ = require("lodash"); #const R = require("rambda"); #const solution = (width, length) => { #return width * length; #}; #module.exports = solution;
    - Нажимаем кнопку "Ran"
  expected-result: |
    Пользователю будет показана работа его кода во вкладке "OUTPUT"

- summary: |
    Возможность проверки своего кода 
  requirement: |
    Пользователь может проверить решение 
  prerequisites: |
    Пользователь авторизован
    Открыта страница игры "rect_area"
    Игра начата 
  test-data: |
    no date 
  steps:
    - Вводим код #const _ = re9("lodash"); #const R = require("rambda"); #const solution = (width, length) => { #return width * length; #}; #module.exports = solution;
    - Нажать на кнопку "Ran"
  expected-result: |
    Происходит переход в раздел OUTPUT, где указан результат проверки тестами: неверное решение - тесты возвращаются с ошибками


- summary: |
    Проверка с помощью DevTools, что запросы уходят и приходят ответы без ошибок
  requirement: |
    При создании и удалении игры в консоли DevTools запросы уходят и приходят ответы без ошибок
  prerequisites:
    Открыта главная страница.Открыта консоль DevTools
  test-data: |
    Запросы на создание и удаление игры
  steps:
    - Создаем игру
    - Завершаем игру 
  expected-result: |
    Запросы срабатывают успешно и не должно быть ошибок

- summary: |
    Проверка адаптивности страницы игры в мобильной версии
  requirement: |
    При открытии сайта на мобильном устройстве элементы отображаются корректно
  prerequisites:
    Открыта главная страница
  test-data: |
    Модель телефона = iPhone SE 
  steps:
    - Открываем главную страницу
    - Открываем код разработчика
    - Нажимаем на кнопку Toggle device toolbar
    - Выбираем модель телефона
    - Создаем игру
    - Переходим на страницу игры
  expected-result: |
    Вcе элементы страницы гармонично адаптируются под размер телефона 

- summary: |
    Проверка кроссбраузерности при отображении страницы игры
  requirement: |
    Содержимое сайта должно корректно отображаться в браузере Firefox
  prerequisites:
    Пользователь авторизован
    Открыта основная страница сайта 
  test-data: |
    браузер Firefox
  steps:
    - Создаем игру
    - Вводим любой код в область ввода кода
    - На странице игры нажать на кнопку "Ran"
  expected-result: |
    Сайт корректно отображается в браузерe Firefox

- summary: |
    Проверка отправки и отображения сообщений
  requirement: |
    Сообщение отправлено и отображается в чате, отображается последним 
  prerequisites:
    Открыта страница игры
  test-data: |
    no date
  steps:
    - Вводим "Привет"
    - Нажимаем "Enter"
  expected-result: |
    Пользователь должен увидеть своё сообщение в чате последним

- summary: |
    Проверка безопасности пользовательских данных
  requirement: |
    При регистрации видно,что соединение защищенно протоколом HTTPS
  prerequisites:
    Открыта страница логина
  test-data: |
    Nickname = Angela Email = test12-hexlet@yandex.ru Password = Parol-ex-hexlet1
  steps:
    - Вводим Nickname
    - Вводим Email
    - Вводим пароль
    - Вводим подтверждение пароля
    - Открываем DevTools
    - Проверяет в разделе Security информацию о безопасности передачи данных
  expected-result: |
    Пользователю в запросе будет видно,что соединение защищенно протоколом HTTPS.В DevTools будет сообщение,что страница,соединение и ресурсы защищены

- summary: |
    Проверка возможности сдаться во время игры
  requirement: |
    Пользователь имеет возможность сдаться во время игры
  prerequisites: |
    Пользователь авторизован
    Открыта главная страница сайта 
  test-data: |
    Параметры игры: level = 1, game type = with a bot, time control = 8 min, chose task = random task
  steps:
   - Нажать кнопку "create a game"
   - В графе Level выбрать первое значение
   - В графе Game Type выбрать With a bot
   - В графе Time control установить значение 8 min
   - В графе Choose task by name or tags выбрать random task
   - В графе Tags выбрать match 
   - Нажать кнопку create battle
   - Нажать кнопку "Give Up" (красный флаг)
  expected-result: |
    Игра завершится, появится сообщение о проигрыше

- summary: |
    Проверка автоматического окончания игры по истечении времени - TIMEOUT
  requirement: |
    Автоматическое окончание игры по истечении заданного времени игры
  prerequisites: |
    - пользователь авторизован на сайте
  test-data: |
    no date
  steps:
    - Принимаем приглашение в игру или создаем игру
    - Пишем код 
    - Ждем окончания времени игры TIMEOUT IN
  expected-result: |
    Автоматическое окончание игры по истечении заданного времени и отображение результата

- summary: |
   Проверка создания игры с реальным игроком 
  requirement: |
   Пользователь должен иметь возможность создания игры с другим игроком
  prerequisites: |
   Пользователь авторизован и открыта главная страница сайта
  test-data: |
   no date 
  steps:
   - Нажать кнопку "create a game"
   - В графе Level выбрать первое значение
   - В графе Game Type выбрать With other users
   - В графе Time control установить значение 15 min
   - В графе Choose task by name or tags выбрать random task
   - В графе Tags выбрать match 
   - Нажать кнопку create battle
  expected-result: |
   Игра с другим пользователем создана

- summary: |
   Проверка создания игры с ботом
  requirement: |  
   Пользователь должен иметь возможность играть с ботом
  prerequisites: |
    Пользователь авторизован и открыта главная страница сайта
  test-data: |
   no date 
  steps:
   - Нажать кнопку "create a game"
   - В графе Level выбрать первое значение
   - В графе Game Type выбрать With a bot
   - В графе Time control установить значение 8 min
   - В графе Choose task by name or tags выбрать rest
   - В графе Tags выбрать match 
   - Нажать кнопку create battle
  expected-result: |
   Игра с ботом создана  

    
