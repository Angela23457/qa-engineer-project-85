---
- summary: |
    Успешная регистрация пользователя по e-mail
  requirement: |
    Возможность зарегистрироваться на Codebattle через e-mail
  prerequisites: |
    Окрыта страница регистрации
  test-data: |
    Nickname = Angela Email = test12-hexlet@yandex.ru Password = Parol-ex-hexlet1
  steps:
    - Вводим Nickname
    - Вводим Email
    - Вводим пароль
    - Вводим подтверждение пароля
    - Нажимаем кнопку «Submit»
  expected-result: |
    Пользователь зарегистрирован 

- summary: |
    Проверка того,что невозможно зарегистрироваться с неправильным адресом электронной почты
  requirement: |
    При неверно написанном электронном адресе будет сообщение об ошибке
  prerequisites:
    Открыта страница логина
  test-data: |
    Nickname = Angela Email = test12-hexletyandexcom Password = Parol-ex-hexlet1
  steps:
    - Вводим Nickname
    - Вводим Email
    - Вводим пароль
    - Вводим подтверждение пароля
    - Нажимаем кнопку «Submit»
  expected-result: |
    Пользователь должен получить сообщение об ошибке что Email неверный 
    
- summary: |
    Повторная регистрация существующего пользователя Codebattle
  requirement: |
    При повторной регистрации пользователь должен получить сообщение об ошибке
  prerequisites:
    Открыта страница регистрации
  test-data: |
    Nickname = Angela Email = test12-hexlet@yandex.ru Password = Parol-ex-hexlet1
  steps:
    -  Вводим Nickname
    -  Вводим Email
    -  Вводим пароль
    -  Нажимаем кнопку «Submit»
  expected-result: |
    Пользователь должен получить сообщение об ошибке

- summary: |
    Успешная авторизация пользователя через Github
  requirement: |
    При верном вводе логина и пароля происходит успешная авторизация на Codebattle
  prerequisites: |
    Окрыта страница регистрации
  test-data: |
    Username = Анжела23457 Password = Popihe123
  steps:
    - Нажимаем кнопку «Войдите с помощью Github»
    - Вводим пароль
    - Вводим логин
    - Нажимаем кнопку «Войти
  expected-result: |
    Пользователь авторизован и должен попасть на главную страницу

- summary: |
    Проверка запуска игры неавторизованным пользователем
  requirement: |
    Неавторизованный пользователь может пройти демо-версию батла с ботом
  prerequisites:
    Открыта страница логина. Пользователь не авторизован
  test-data: |
    no date 
  steps:
    - Нажимаем кнопку «Try simple battle»
  expected-result: |
   Начинается батл с ботом

- summary: |
    Проверка выбора уровня сложности батла
  requirement: |
    Перед началом батла игрок может выбрать уровень сложности
  prerequisites:
    Открыта главная страница, пользователь авторизован
  test-data: |
    no date 
  steps:
    - Нажать на кнопку "Create a game"
    - В модальном окне выбрать сложность баттла
    - Нажать "Create battle"
  expected-result: |
    Начинается батл с выбранным уровнем сложности 

- summary: |
    Проверка успешной авторизации через Discord 
  requirement: |
    При верном вводе логина и пароля происходит успешная авторизация на Codebattle через Discord 
  prerequisites:
    Открыта страница регистрации
  test-data: |
    Логин = pampyshka1 Пароль = 12345qwer4545
  steps:
    - Нажиаем кнопку "Войти через Discord"
    - Вводим емайл/номер телефона
    - Вводим пароль
    - Нажимаем кнопку "Вход"
  expected-result: |
    Пользователь авторизован и должен попасть на главную страницу 

- summary: |
    Проверка,того что пользователь может выбрать язык программирования для выполнения задания
  requirement: |
    Когда начинается игра над окном решения есть список языков на выбор
  prerequisites:
    Открыта страница игры "rect_area"
  test-data: |
    12 языков программирования на выбор
  steps:
    - Выбираем язык из списка
    - Нажимаем на него
  expected-result: |
    У пользователя устанавливается выбранный язык и можно начинать писать код

- summary: |
    Проверка,того что пользователь может проверить своё решение
  requirement: |
    Пользователь может проверить правильность своего кода 
  prerequisites:
    Открыта страница игры "rect_area"
  test-data: |
    no date 
  steps:
    - Вводим код #const _ = require("lodash"); #const R = require("rambda"); #const solution = (width, length) => { #return width * length; #}; #module.exports = solution;
    - Нажимаем кнопку "Check solution"
  expected-result: |
    Пользователю будет показана работа его кода во вкладке "OUTPUT"

- summary: |
    Проверка с помощью DevTools, что запросы уходят и приходят ответы без ошибок
  requirement: |
    При создании и удалении игры в консоли DevTools запросы уходят и приходят ответы без ошибок
  prerequisites:
    Открыта главная страница.Открыта консоль DevTools
  test-data: |
    Запросы на создание и удаление игры
  steps:
    - Создаем игру
    - Завершаем игру 
  expected-result: |
    Запросы срабатывают успешно и не должно быть ошибок

- summary: |
    Проверка адаптивности страницы игры в мобильной версии
  requirement: |
    При открытии сайта на мобильном устройстве элементы отображаются корректно
  prerequisites:
    Открыта главная страница
  test-data: |
    Модель телефона = iPhone SE 
  steps:
    - Открываем главную страницу
    - Открываем код разработчика
    - Нажимаем на кнопку Toggle device toolbar
    - Выбираем модель телефона
    - Создаем игру
    - Переходим на страницу игры
  expected-result: |
    Вcе элементы страницы гармонично адаптируются под размер телефона 

- summary: |
    Проверка кроссбраузерности при отображении страницы игры
  requirement: |
    При открытии сайта в другом браузере всё отображается точно так же
  prerequisites:
    Открыта страница игры в браузере Google Chrome
  test-data: |
    no date 
  steps:
    - Копируем ссылку и открываем сайт в браузере Firefox
    - Создаем игру
  expected-result: |
    В браузере Firefox всё отображается точно так же

- summary: |
    Проверка отправки и отображения сообщений
  requirement: |
    Сообщение отправлено и отображается в чате, отображается последним 
  prerequisites:
    Открыта страница игры
  test-data: |
    no date
  steps:
    - Вводим "Привет"
    - Нажимаем "Enter"
  expected-result: |
    Пользователь должен увидеть своё сообщение в чате последним

- summary: |
    Проверка безопасности пользовательских данных
  requirement: |
    При регистрации видно,что соединение защищенно протоколом HTTPS
  prerequisites:
    Открыта страница логина
  test-data: |
    Nickname = Angela Email = test12-hexlet@yandex.ru Password = Parol-ex-hexlet1
  steps:
    - Вводим Nickname
    - Вводим Email
    - Вводим пароль
    - Вводим подтверждение пароля
    - Открываем DevTools
    - Проверяет в разделе Security информацию о безопасности передачи данных
  expected-result: |
    Пользователю в запросе будет видно,что соединение защищенно протоколом HTTPS.В DevTools будет сообщение,что страница,соединение и ресурсы защищены.
